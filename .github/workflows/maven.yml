name: Kotlin CI with Maven
on: [push]

jobs:
  # Label of the runner job
  runner-job:
    # It must be used a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # Provide the password for postgres
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: 5678
          POSTGRES_DB: chefficient_test_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the 9991 on the host
          - 9991:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - run: mkdir staging && cp target/*.jar staging

    # Packaged application for further deployment
    - uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging